[{"/Users/gabriellequan/Dev/DevLink/client/src/index.js":"1","/Users/gabriellequan/Dev/DevLink/client/src/App.js":"2","/Users/gabriellequan/Dev/DevLink/client/src/store.js":"3","/Users/gabriellequan/Dev/DevLink/client/src/components/layout/Landing.js":"4","/Users/gabriellequan/Dev/DevLink/client/src/components/auth/Login.js":"5","/Users/gabriellequan/Dev/DevLink/client/src/components/auth/Register.js":"6","/Users/gabriellequan/Dev/DevLink/client/src/reducers/index.js":"7","/Users/gabriellequan/Dev/DevLink/client/src/actions/types.js":"8","/Users/gabriellequan/Dev/DevLink/client/src/reducers/alert.js":"9","/Users/gabriellequan/Dev/DevLink/client/src/components/layout/Header.js":"10","/Users/gabriellequan/Dev/DevLink/client/src/components/utils/FormContainer.js":"11","/Users/gabriellequan/Dev/DevLink/client/src/components/layout/Message.js":"12","/Users/gabriellequan/Dev/DevLink/client/src/actions/userActions.js":"13","/Users/gabriellequan/Dev/DevLink/client/src/components/utils/api.js":"14","/Users/gabriellequan/Dev/DevLink/client/src/components/utils/setAuthToken.js":"15","/Users/gabriellequan/Dev/DevLink/client/src/reducers/userReducers.js":"16","/Users/gabriellequan/Dev/DevLink/client/src/components/dashboard/Dashboard.js":"17","/Users/gabriellequan/Dev/DevLink/client/src/components/routing/PrivateRoute.js":"18","/Users/gabriellequan/Dev/DevLink/client/src/reducers/profileReducer.js":"19","/Users/gabriellequan/Dev/DevLink/client/src/actions/profileActions.js":"20","/Users/gabriellequan/Dev/DevLink/client/src/components/dashboard/EditDashboard.js":"21","/Users/gabriellequan/Dev/DevLink/client/src/components/dashboard/Education.js":"22","/Users/gabriellequan/Dev/DevLink/client/src/components/dashboard/Experience.js":"23","/Users/gabriellequan/Dev/DevLink/client/src/components/utils/formateDate.js":"24","/Users/gabriellequan/Dev/DevLink/client/src/components/profile/ProfileForm.js":"25"},{"size":247,"mtime":1647187153367,"results":"26","hashOfConfig":"27"},{"size":1268,"mtime":1647618602586,"results":"28","hashOfConfig":"27"},{"size":863,"mtime":1647195977076,"results":"29","hashOfConfig":"27"},{"size":817,"mtime":1647185322364,"results":"30","hashOfConfig":"27"},{"size":2490,"mtime":1647618525412,"results":"31","hashOfConfig":"27"},{"size":3748,"mtime":1647618534424,"results":"32","hashOfConfig":"27"},{"size":260,"mtime":1647273639152,"results":"33","hashOfConfig":"27"},{"size":730,"mtime":1647218695950,"results":"34","hashOfConfig":"27"},{"size":437,"mtime":1646670240055,"results":"35","hashOfConfig":"27"},{"size":1890,"mtime":1647216453252,"results":"36","hashOfConfig":"27"},{"size":384,"mtime":1647215912739,"results":"37","hashOfConfig":"27"},{"size":258,"mtime":1647187246060,"results":"38","hashOfConfig":"27"},{"size":1600,"mtime":1647197288629,"results":"39","hashOfConfig":"27"},{"size":420,"mtime":1647192640447,"results":"40","hashOfConfig":"27"},{"size":383,"mtime":1647192247159,"results":"41","hashOfConfig":"27"},{"size":1242,"mtime":1647193343353,"results":"42","hashOfConfig":"27"},{"size":1726,"mtime":1647274594537,"results":"43","hashOfConfig":"27"},{"size":634,"mtime":1647214254894,"results":"44","hashOfConfig":"27"},{"size":1002,"mtime":1647273574774,"results":"45","hashOfConfig":"27"},{"size":3903,"mtime":1647621415589,"results":"46","hashOfConfig":"27"},{"size":604,"mtime":1647274037903,"results":"47","hashOfConfig":"27"},{"size":1046,"mtime":1647618463236,"results":"48","hashOfConfig":"27"},{"size":1050,"mtime":1647618450739,"results":"49","hashOfConfig":"27"},{"size":124,"mtime":1647274298228,"results":"50","hashOfConfig":"27"},{"size":8684,"mtime":1647619094993,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1yzbpte",{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"54"},"/Users/gabriellequan/Dev/DevLink/client/src/index.js",[],["110","111"],"/Users/gabriellequan/Dev/DevLink/client/src/App.js",["112","113"],"import React, { Fragment } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Routes,\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport Header from \"./components/layout/Header\";\nimport Landing from \"./components/layout/Landing\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProfileForm from \"./components/profile/ProfileForm\";\nimport PrivateRoute from \"./components/routing/PrivateRoute\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nconst App = () => (\n  <Provider store={store}>\n    <Router>\n      <Header />\n\n      <Routes>\n        <Route path=\"/\" element={<Landing />} />\n        <Route path=\"/register\" element={<Register />} />\n        <Route path=\"/login\" element={<Login />} />\n        <Route\n          path=\"/dashboard\"\n          element={<PrivateRoute component={Dashboard} />}\n        />\n        <Route\n          path=\"create-profile\"\n          element={<PrivateRoute component={ProfileForm} />}\n        />\n        <Route\n          path=\"edit-profile\"\n          element={<PrivateRoute component={ProfileForm} />}\n        />\n      </Routes>\n    </Router>\n  </Provider>\n);\n\nexport default App;\n","/Users/gabriellequan/Dev/DevLink/client/src/store.js",[],"/Users/gabriellequan/Dev/DevLink/client/src/components/layout/Landing.js",[],"/Users/gabriellequan/Dev/DevLink/client/src/components/auth/Login.js",[],"/Users/gabriellequan/Dev/DevLink/client/src/components/auth/Register.js",[],"/Users/gabriellequan/Dev/DevLink/client/src/reducers/index.js",[],"/Users/gabriellequan/Dev/DevLink/client/src/actions/types.js",[],"/Users/gabriellequan/Dev/DevLink/client/src/reducers/alert.js",[],"/Users/gabriellequan/Dev/DevLink/client/src/components/layout/Header.js",["114"],"import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { logout } from \"../../actions/userActions\";\nimport { useDispatch } from \"react-redux\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Navbar, Container, Nav } from \"react-bootstrap\";\n\nconst Header = ({ isAuthenticated }) => {\n  const dispatch = useDispatch();\n  const onClickHandler = () => {\n    dispatch(logout)\n  }\n  const authLinks = (\n    <Nav className=\"me-auto\">\n      <Nav.Link>\n        <Link to=\"/profiles\">Developers</Link>\n      </Nav.Link>\n      <Nav.Link>\n        <Link to=\"/posts\">Posts</Link>\n      </Nav.Link>\n      <Nav.Link>\n        <Link to=\"/dashboard\">\n          <i className=\"fas fa-user\" />{\" \"}\n          <span className=\"hide-sm\">Dashboard</span>\n        </Link>\n      </Nav.Link>\n      <Nav.Link >\n        <Link to=\"/\">\n          {\" \"}\n          <i className=\"fas fa-sign-out-alt\" />{\" \"}\n          <span onClick={dispatch(logout)} className=\"hide-sm\">Logout</span>\n        </Link>\n      </Nav.Link>\n    </Nav>\n  );\n\n  const guestLinks = (\n    <Nav className=\"me-auto\">\n      <Nav.Link>\n        <Link to=\"/profiles\">Developers</Link>\n      </Nav.Link>\n      <Nav.Link>\n        <Link to=\"/register\">Register</Link>\n      </Nav.Link>\n      <Nav.Link>\n        <Link to=\"/login\">Login</Link>\n      </Nav.Link>\n    </Nav>\n  );\n\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\">\n      <Container>\n        <Navbar.Brand>\n          <Link to=\"/\">DevLink</Link>\n        </Navbar.Brand>\n        <Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>\n      </Container>\n    </Navbar>\n  );\n};\n\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { logout })(Header);\n","/Users/gabriellequan/Dev/DevLink/client/src/components/utils/FormContainer.js",[],"/Users/gabriellequan/Dev/DevLink/client/src/components/layout/Message.js",["115","116"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport { Alert } from \"react-bootstrap\";\n\nexport default function Message({ variant, children }) {\n  return <Alert variant={variant}>{children}</Alert>;\n}\n","/Users/gabriellequan/Dev/DevLink/client/src/actions/userActions.js",[],"/Users/gabriellequan/Dev/DevLink/client/src/components/utils/api.js",[],"/Users/gabriellequan/Dev/DevLink/client/src/components/utils/setAuthToken.js",[],"/Users/gabriellequan/Dev/DevLink/client/src/reducers/userReducers.js",[],"/Users/gabriellequan/Dev/DevLink/client/src/components/dashboard/Dashboard.js",[],"/Users/gabriellequan/Dev/DevLink/client/src/components/routing/PrivateRoute.js",[],"/Users/gabriellequan/Dev/DevLink/client/src/reducers/profileReducer.js",["117","118"],"import {\n  GET_PROFILE,\n  PROFILE_ERROR,\n  CLEAR_PROFILE,\n  UPDATE_PROFILE,\n  GET_PROFILES,\n  GET_REPOS,\n  NO_REPOS,\n} from \"../actions/types\";\n\nconst initialState = {\n  profile: null,\n  profiles: [],\n  repos: [],\n  loading: true,\n  error: {},\n};\n\nfunction profileReducer(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_PROFILE:\n      return {\n        ...state,\n        profile: payload,\n        loading: false,\n      };\n    case UPDATE_PROFILE:\n      return {\n        ...state,\n        profile: payload,\n        loading: false,\n      };\n    case GET_PROFILES:\n      return {\n        ...state,\n        profiles: payload,\n        loading: false,\n      };\n    case PROFILE_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n        profile: null,\n      };\n    case CLEAR_PROFILE:\n      return {\n        ...state,\n        profile: null,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default profileReducer;","/Users/gabriellequan/Dev/DevLink/client/src/actions/profileActions.js",["119","120","121"],"/Users/gabriellequan/Dev/DevLink/client/src/components/dashboard/EditDashboard.js",[],"/Users/gabriellequan/Dev/DevLink/client/src/components/dashboard/Education.js",["122","123"],"import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport formatDate from \"../utils/formateDate\";\n\nconst Education = ({ education }) => {\n  const educations = education.map((edu) => (\n    <tr key={edu._id}>\n      <td>{edu.school}</td>\n      <td className=\"hide-sm\">{edu.degree}</td>\n      <td>\n        {formatDate(edu.from)} - {edu.to ? formatDate(edu.to) : \"Now\"}\n      </td>\n      {/* <td>\n        <button\n          onClick={() => deleteEducation(edu._id)}\n          className=\"btn btn-danger\"\n        >\n          Delete\n        </button>\n      </td> */}\n    </tr>\n  ));\n  return (\n    <Fragment>\n      <h2 className=\"my-2\">Education</h2>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>School</th>\n            <th className=\"hide-sm\">Degree</th>\n            <th className=\"hide-sm\">Years</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>{educations}</tbody>\n      </table>\n    </Fragment>\n  );\n};\n\nexport default Education;\n","/Users/gabriellequan/Dev/DevLink/client/src/components/dashboard/Experience.js",["124","125"],"import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport formatDate from \"../utils/formateDate\";\n\nfunction Experience({ experience }) {\n  const experiences = experience.map((exp) => (\n    <tr key={exp._id}>\n      <td>{exp.company}</td>\n      <td className=\"hide-sm\">{exp.title}</td>\n      <td>\n        {formatDate(exp.from)} - {exp.to ? formatDate(exp.to) : \"Now\"}\n      </td>\n      {/* <td>\n        <button\n          onClick={() => deleteExperience(exp._id)}\n          className=\"btn btn-danger\"\n        >\n          Delete\n        </button>\n      </td> */}\n    </tr>\n  ));\n  return (\n    <Fragment>\n      <h2 className=\"my-2\">Experience</h2>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>Company</th>\n            <th className=\"hide-sm\">Title</th>\n            <th className=\"hide-sm\">Years</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>{experiences}</tbody>\n      </table>\n    </Fragment>\n  );\n}\n\nexport default Experience;\n","/Users/gabriellequan/Dev/DevLink/client/src/components/utils/formateDate.js",[],"/Users/gabriellequan/Dev/DevLink/client/src/components/profile/ProfileForm.js",["126","127","128"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport { Link, useMatch, useNavigate } from \"react-router-dom\";\nimport FormContainer from \"../utils/FormContainer\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Message from \"../layout/Message\";\nimport { createProfile, getCurrentProfile } from \"../../actions/profileActions\";\n\nconst initialState = {\n  company: \"\",\n  website: \"\",\n  location: \"\",\n  status: \"\",\n  skills: \"\",\n  githubusername: \"\",\n  bio: \"\",\n  twitter: \"\",\n  facebook: \"\",\n  linkedin: \"\",\n  youtube: \"\",\n  instagram: \"\",\n};\n\nconst ProfileForm = ({\n  profile: { profile, loading, error },\n  createProfile,\n  getCurrentProfile,\n}) => {\n  const [formData, setFormData] = useState(initialState);\n\n  const creatingProfile = useMatch(\"/create-profile\");\n\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!profile) getCurrentProfile();\n\n    if (!loading && profile) {\n      const profileData = { ...initialState };\n      for (const key in profile) {\n        if (key in profileData) profileData[key] = profile[key];\n      }\n      for (const key in profile.social) {\n        if (key in profileData) profileData[key] = profile.social[key];\n      }\n\n      if (Array.isArray(profileData.skills))\n        profileData.skills = profileData.skills.join(\", \");\n      setFormData(profileData);\n    }\n  }, [loading, getCurrentProfile, profile]);\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram,\n  } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    createProfile(formData, navigate, profile ? true : false);\n  };\n  return (\n    <FormContainer>\n      <h5 className=\"large text-primary\">\n        {creatingProfile ? \"Create Your Profile\" : \"Edit Your Profile\"}\n      </h5>\n      {creatingProfile ? (\n        \"\"\n      ) : (\n        <>\n          {Object.keys(error).length == 0 ? (\n            \"\"\n          ) : (\n            <Message variant=\"danger\">{error.data.msg}</Message>\n          )}\n        </>\n      )}\n\n      <small>* = required field</small>\n      <Form onSubmit={(e) => onSubmit(e)}>\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Status</Form.Label>\n          <Form.Select name=\"status\" value={status} onChange={onChange}>\n            <option>* Select Professional Status</option>\n            <option value=\"Developer\">Developer</option>\n            <option value=\"Junior Developer\">Junior Developer</option>\n            <option value=\"Senior Developer\">Senior Developer</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Student or Learning\">Student or Learning</option>\n            <option value=\"Instructor\">Instructor or Teacher</option>\n            <option value=\"Intern\">Intern</option>\n            <option value=\"Other\">Other</option>\n          </Form.Select>\n          <small className=\"form-text\">\n            Give us an idea of where you are at in your career\n          </small>\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"company\">\n          <Form.Label>Company</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Company\"\n            name=\"company\"\n            value={company}\n            onChange={onChange}\n          />\n          <small className=\"form-text\">\n            Could be your own company or one you work for\n          </small>\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"website\">\n          <Form.Label>Company</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Website\"\n            name=\"website\"\n            value={website}\n            onChange={onChange}\n          />\n          <small className=\"form-text\">\n            Could be your own or a company website\n          </small>\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"location\">\n          <Form.Label>Location</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Location\"\n            name=\"location\"\n            value={location}\n            onChange={onChange}\n          />\n          <small className=\"form-text\">\n            City & state suggested (eg. Boston, MA)\n          </small>\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"skills\">\n          <Form.Label>Skills</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"* Skills\"\n            name=\"skills\"\n            value={skills}\n            onChange={onChange}\n          />\n          <small className=\"form-text\">\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"skills\">\n          <Form.Label>Github Username</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Github Username\"\n            name=\"githubusername\"\n            value={githubusername}\n            onChange={onChange}\n          />\n          <small className=\"form-text\">\n            If you want share your Github repos, include your username\n          </small>\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"bio\">\n          <Form.Label>Bio</Form.Label>\n          <Form.Control\n            placeholder=\"A short bio of yourself\"\n            name=\"bio\"\n            value={bio}\n            onChange={onChange}\n            as=\"textarea\"\n            rows={3}\n          />\n          <small className=\"form-text\">Tell us a little about yourself</small>\n        </Form.Group>\n        <div className=\"my-2\">\n          <Button\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\n            type=\"button\"\n            className=\"btn btn-light\"\n          >\n            Add Social Network Links\n          </Button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && (\n          <Fragment>\n            <Form.Group className=\"social-input my-2\" controlId=\"twitter\">\n              <i className=\"fab fa-twitter fa-2x\" />\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Twitter URL\"\n                name=\"twitter\"\n                value={twitter}\n                onChange={onChange}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"social-input my-2\" controlId=\"facebook\">\n              <i className=\"fab fa-facebook fa-2x\" />\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Facebook URL\"\n                name=\"facebook\"\n                value={facebook}\n                onChange={onChange}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"social-input my-2\" controlId=\"youtube\">\n              <i className=\"fab fa-youtube fa-2x\" />\n              <Form.Control\n                type=\"text\"\n                placeholder=\"YouTube URL\"\n                name=\"youtube\"\n                value={youtube}\n                onChange={onChange}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"social-input my-2\" controlId=\"linkedin\">\n              <i className=\"fab fa-linkedin fa-2x\" />\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Linkedin URL\"\n                name=\"linkedin\"\n                value={linkedin}\n                onChange={onChange}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"social-input my-2\" controlId=\"instagram\">\n              <i className=\"fab fa-instagram fa-2x\" />\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Instagram URL\"\n                name=\"instagram\"\n                value={instagram}\n                onChange={onChange}\n              />\n            </Form.Group>\n          </Fragment>\n        )}\n\n        <Button variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\n          Go Back\n        </Link>\n      </Form>\n    </FormContainer>\n  );\n};\n\nProfileForm.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\n  ProfileForm\n);\n",{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":1,"column":17,"nodeType":"135","messageId":"136","endLine":1,"endColumn":25},{"ruleId":"133","severity":1,"message":"137","line":5,"column":3,"nodeType":"135","messageId":"136","endLine":5,"endColumn":9},{"ruleId":"133","severity":1,"message":"138","line":11,"column":9,"nodeType":"135","messageId":"136","endLine":11,"endColumn":23},{"ruleId":"133","severity":1,"message":"139","line":2,"column":10,"nodeType":"135","messageId":"136","endLine":2,"endColumn":17},{"ruleId":"133","severity":1,"message":"140","line":3,"column":8,"nodeType":"135","messageId":"136","endLine":3,"endColumn":17},{"ruleId":"133","severity":1,"message":"141","line":7,"column":3,"nodeType":"135","messageId":"136","endLine":7,"endColumn":12},{"ruleId":"133","severity":1,"message":"142","line":8,"column":3,"nodeType":"135","messageId":"136","endLine":8,"endColumn":11},{"ruleId":"133","severity":1,"message":"143","line":8,"column":3,"nodeType":"135","messageId":"136","endLine":8,"endColumn":18},{"ruleId":"133","severity":1,"message":"141","line":9,"column":3,"nodeType":"135","messageId":"136","endLine":9,"endColumn":12},{"ruleId":"133","severity":1,"message":"142","line":10,"column":3,"nodeType":"135","messageId":"136","endLine":10,"endColumn":11},{"ruleId":"133","severity":1,"message":"140","line":2,"column":8,"nodeType":"135","messageId":"136","endLine":2,"endColumn":17},{"ruleId":"133","severity":1,"message":"139","line":3,"column":10,"nodeType":"135","messageId":"136","endLine":3,"endColumn":17},{"ruleId":"133","severity":1,"message":"140","line":2,"column":8,"nodeType":"135","messageId":"136","endLine":2,"endColumn":17},{"ruleId":"133","severity":1,"message":"139","line":3,"column":10,"nodeType":"135","messageId":"136","endLine":3,"endColumn":17},{"ruleId":"133","severity":1,"message":"144","line":4,"column":24,"nodeType":"135","messageId":"136","endLine":4,"endColumn":27},{"ruleId":"133","severity":1,"message":"145","line":4,"column":29,"nodeType":"135","messageId":"136","endLine":4,"endColumn":32},{"ruleId":"146","severity":1,"message":"147","line":87,"column":38,"nodeType":"148","messageId":"149","endLine":87,"endColumn":40},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'onClickHandler' is assigned a value but never used.","'connect' is defined but never used.","'PropTypes' is defined but never used.","'GET_REPOS' is defined but never used.","'NO_REPOS' is defined but never used.","'ACCOUNT_DELETED' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]